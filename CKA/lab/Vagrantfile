Vagrant.configure("2") do |config|
  nodes = [
    { :hostname => "master", :ip => "192.168.56.10" },
    { :hostname => "worker1", :ip => "192.168.56.11" },
    { :hostname => "worker2", :ip => "192.168.56.12" }
  ]

  config.vm.box = "ubuntu/jammy64"

  nodes.each do |node|
    config.vm.define node[:hostname] do |node_config|
      node_config.vm.hostname = node[:hostname]
      node_config.vm.network "private_network", ip: node[:ip]

      node_config.vm.provider "virtualbox" do |vb|
        vb.memory = 2048
        vb.cpus = 2
      end

      node_config.vm.provision "shell", inline: <<-SHELL
        echo "[Provisioning #{node[:hostname]}]"

        swapoff -a
        sed -i '/ swap / s/^/#/' /etc/fstab

        # Install Docker
        export DEBIAN_FRONTEND=noninteractive
        apt update -y
        apt install -y apt-transport-https ca-certificates curl software-properties-common gnupg lsb-release
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu jammy stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
        apt update -y && apt install -y docker-ce docker-ce-cli containerd.io
      
        # Enable and start Docker service
        systemctl enable docker
        systemctl start docker

        CNI_PLUGINS_VERSION="v1.3.0"
        ARCH="amd64"
        DEST="/opt/cni/bin"
        sudo mkdir -p "$DEST"
        curl -L \
          "https://github.com/containernetworking/plugins/releases/download/${CNI_PLUGINS_VERSION}/cni-plugins-linux-${ARCH}-${CNI_PLUGINS_VERSION}.tgz" \
          | sudo tar -C "$DEST" -xz

        DOWNLOAD_DIR="/usr/local/bin"
        sudo mkdir -p "$DOWNLOAD_DIR"

        RELEASE="$(curl -sSL https://dl.k8s.io/release/stable.txt)"

        ARCH="amd64"
        cd $DOWNLOAD_DIR
        sudo curl -L --remote-name-all https://dl.k8s.io/release/${RELEASE}/bin/linux/${ARCH}/{kubeadm,kubelet}
        sudo chmod +x {kubeadm,kubelet}

        RELEASE_VERSION="v0.16.2"
        curl -sSL "https://raw.githubusercontent.com/kubernetes/release/${RELEASE_VERSION}/cmd/krel/templates/latest/kubelet/kubelet.service" | sed "s:/usr/bin:${DOWNLOAD_DIR}:g" | sudo tee /usr/lib/systemd/system/kubelet.service
        sudo mkdir -p /usr/lib/systemd/system/kubelet.service.d
        curl -sSL "https://raw.githubusercontent.com/kubernetes/release/${RELEASE_VERSION}/cmd/krel/templates/latest/kubeadm/10-kubeadm.conf" | sed "s:/usr/bin:${DOWNLOAD_DIR}:g" | sudo tee /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf

        sudo systemctl enable --now kubelet
      SHELL
    end
  end
end

